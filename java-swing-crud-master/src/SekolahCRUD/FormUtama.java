/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package SekolahCRUD;

import com.mysql.jdbc.PreparedStatement;
import com.mysql.jdbc.Statement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.HashMap;
import java.util.Map;

/**
 *
 * @author 
 */
public class FormUtama extends javax.swing.JFrame {
    private DefaultTableModel tableModel;
    private DefaultTableModel tableModel1;
    private Connection connection;
    /**
     * Creates new form FormUtama
     */
    public FormUtama() {
        initComponents();
        initTable();
        loadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        textCari = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabel = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabel1 = new javax.swing.JTable();
        cari = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Aplikasi Sekolah");

        jLabel7.setText("Cari");

        textCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textCariKeyReleased(evt);
            }
        });

        tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tabel);

        tabel1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabel1MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tabel1);

        cari.setText("cari");
        cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cariActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textCari, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(cari)
                .addContainerGap(243, Short.MAX_VALUE))
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 558, Short.MAX_VALUE)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 558, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(textCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cari))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(129, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textCariKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textCariKeyReleased
        // TODO add your handling code here:
        
        tableModel.getDataVector().removeAllElements();
        
        //pemberitahuan bahwa tabel telah kosong
        tableModel.fireTableDataChanged();
        
        try {
          
          String synset = "";
          connection = Database.getConnection();
          String query = "SELECT * FROM wordnet WHERE Lemma LIKE  '"+cari+"' AND Lang ='B' AND (Goodness ='Y' OR Goodness = 'O')";
          
          Statement statement = (Statement) connection.createStatement();
          ResultSet resultSet = statement.executeQuery(query);
          
          while (resultSet.next()){
              Object[] siswa = new Object[6];
              siswa[0] = resultSet.getString("ID");
              siswa[1] = resultSet.getString("Synset");
              siswa[2] = resultSet.getString("Lang");
              siswa[3] = resultSet.getString("Goodness");
              siswa[4] = resultSet.getString("Lemma");
              tableModel.addRow(siswa);
              synset = siswa[1].toString();  
        }
          
          resultSet.close(); //menutup result set
          statement.close(); //menutup statement
          
          query = "SELECT * FROM wordnet WHERE Synset like '"+synset+"'";
          statement = (Statement) connection.createStatement();
          
          resultSet = statement.executeQuery(query);
          String Kunci ="";
          String Answer="";
          while(resultSet.next()){
              Object[] siswa = new Object[6];
              siswa[0] = resultSet.getString("ID");
              siswa[1] = resultSet.getString("Synset");
              siswa[2] = resultSet.getString("Lang");
              siswa[3] = resultSet.getString("Goodness");
              siswa[4] = resultSet.getString("Lemma");
              tableModel1.addRow(siswa);
              Kunci = siswa[1].toString();
              Answer= siswa[4].toString();
              
         }
          HashMap<String,String> hashmap = new HashMap<String , String>();
          hashmap.put(Kunci,Answer);
          System.out.println(hashmap);
          
          resultSet.close(); //menutup result set
          statement.close(); //menutup statement
          
          
        } catch (SQLException ex) {
          System.out.println(ex.getMessage());  
        }
    }//GEN-LAST:event_textCariKeyReleased

    private void tabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelMouseClicked
        //mendapatkan baris yang terseleksi
        
        
    }//GEN-LAST:event_tabelMouseClicked

    private void tabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabel1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tabel1MouseClicked

    private void cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cariActionPerformed
        // TODO add your handling code here:
        String mencari = textCari.getText();
        tableModel.getDataVector().removeAllElements();
        
        //pemberitahuan bahwa tabel telah kosong
        tableModel.fireTableDataChanged();
        
        try {
         
          String synset = "";
          connection = Database.getConnection();
          String query = "SELECT * FROM wordnet WHERE Lemma LIKE  '"+mencari+"' OR ID LIKE'"+mencari+"'limit 1";
          
          Statement statement = (Statement) connection.createStatement();
          ResultSet resultSet = statement.executeQuery(query);
          
          while (resultSet.next()){
              Object[] siswa = new Object[6];
              siswa[0] = resultSet.getString("ID");
              siswa[1] = resultSet.getString("Synset");
              siswa[2] = resultSet.getString("Lang");
              siswa[3] = resultSet.getString("Goodness");
              siswa[4] = resultSet.getString("Lemma");
              tableModel.addRow(siswa);
              synset = siswa[1].toString();  
        }
          
          resultSet.close(); //menutup result set
          statement.close(); //menutup statement
          String synsets = "";
          String lemma="";
          query = "SELECT * FROM wordnet WHERE Synset like '"+synset+"'";
          statement = (Statement) connection.createStatement();
          
          resultSet = statement.executeQuery(query);
          
          while(resultSet.next()){
              Object[] siswa = new Object[6];
              siswa[0] = resultSet.getString("ID");
              siswa[1] = resultSet.getString("Synset");
              siswa[2] = resultSet.getString("Lang");
              siswa[3] = resultSet.getString("Goodness");
              siswa[4] = resultSet.getString("Lemma");
              tableModel1.addRow(siswa);
              synsets =siswa[1].toString();
              lemma =siswa[4].toString();
         }
          HashMap<String, String> hashmap = new HashMap<String , String>();
          hashmap.put(synset,lemma);
      System.out.println(hashmap.get(synset));    
          
          
          resultSet.close(); //menutup result set
          statement.close(); //menutup statement
          
          
        } catch (SQLException ex) {
          System.out.println(ex.getMessage());  
        }
    }//GEN-LAST:event_cariActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new FormUtama().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cari;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tabel;
    private javax.swing.JTable tabel1;
    private javax.swing.JTextField textCari;
    // End of variables declaration//GEN-END:variables

    private void initTable(){
        tableModel = new DefaultTableModel();
        
        tableModel1 = new DefaultTableModel();
        
        tabel.setModel(tableModel);
        tabel1.setModel(tableModel1);
        tableModel.addColumn("Id");
        tableModel.addColumn("synset");
        tableModel.addColumn("Lang");
        tableModel.addColumn("Goodness");
        tableModel.addColumn("Lemma");
        tableModel1.addColumn("Id");
        tableModel1.addColumn("synset");
        tableModel1.addColumn("Lang");
        tableModel1.addColumn("Goodness");
        tableModel1.addColumn("Lemma");
    }
    
    private void loadData(){
        //menghapus seluruh data yg ada di tabel
        tableModel.getDataVector().removeAllElements();
        //pemberitahuan tabel telah kosong
        tableModel.fireTableDataChanged();
        
        try{
            connection =Database.getConnection();
            String query = "SELECT * FROM wordnet";
            
            Statement statement = (Statement) connection.createStatement();
            ResultSet resultSet = statement.executeQuery(query);
            
            //mengisi tabel dgn data hasil query
            while (resultSet.next()){
                Object[] siswa = new Object[6];
                siswa[0] = resultSet.getString("ID");
                siswa[1] = resultSet.getString("Synset");
                siswa[2] = resultSet.getString("Lang");
                siswa[3] = resultSet.getString("Goodness");
                siswa[4] = resultSet.getString("Lemma");
                tableModel.addRow(siswa);
            }
            resultSet.close();
            statement.close();
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
    }
    
    private void reset(){
        textCari.setText("");
        
    }
}